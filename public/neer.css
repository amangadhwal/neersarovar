:root {
    /* Lake colors and glow effects */
    --freshwater-color: #00e1ff;
    --freshwater-glow: rgba(0, 225, 255, 0.6);
    --salt-lake-color: #b835ff;
    --salt-lake-glow: rgba(184, 53, 255, 0.6);
    --high-altitude-color: #48f2ff;
    --high-altitude-glow: rgba(72, 242, 255, 0.7);
    --sacred-lake-color: #ffcd6b;
    --sacred-lake-glow: rgba(255, 205, 107, 0.6);
    --brackish-color: #2aacff;
    --brackish-glow: rgba(42, 172, 255, 0.6);
    --coin-bg-color: #ffcd6b;
    --coin-shadow-color: rgba(255, 205, 107, 0.6);
    --coin-size: 120px;
    --coin-pulse-duration: 5s;
    
    /* Lake type colors */
    --lake-sacred: #ffcd6b;
    --lake-ice: #48f2ff;
    --lake-freshwater: #00e1ff;
    --lake-brackish: #b835ff;
    
    /* Animation timings */
    --orbit-duration: 14s;
    --scan-duration: 8s;
    --crystal-duration: 3s;
    --pulse-duration: 3s;
    
    /* Pixel sizes */
    --pixel-lg: 2px;
    --pixel-md: 1.5px;
    --pixel-sm: 1px;
    
    /* Visual environment */
    --void: #0b0f18;
    --web: #2d3548;
    --node-glow: #4fc1c5;
    --pulse: #5f7a8a;
    --text: #8b9bb4;
    
    /* Orb animation parameters */
    --orb-size: 100px;
    --particle-size: 2px;
    --total-particles: 300;
    --base-hue: 45; /* Golden hue for sacred lakes */
}

/* Basic styles for the Sacred Lakes Visualization project */

body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
}

#map {
    width: 100vw;
    height: 100vh;
    position: absolute;
    top: 0;
    left: 0;
}

#features {
    position: absolute;
    bottom: 20px;
    left: 20px;
    max-width: 400px;
    background: rgba(255, 255, 255, 0.8);
    padding: 10px;
    border-radius: 5px;
    z-index: 10;
    max-height: 70vh;
    overflow-y: auto;
}

.active {
    backdrop-filter: blur(5px);
    transition: all 0.5s ease;
}

.marker {
    background: red;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    cursor: pointer;
}

.marker-active {
    transform: scale(1.5);
    box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
}

/* Particle overlay */
.particle-overlay {
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    z-index: 5;
    mix-blend-mode: screen;
    transform: translateZ(0);
}

/* Orbital particle container */
.orb-wrap {
    position: absolute;
    width: 0;
    height: 0;
    pointer-events: none;
    z-index: 6;
    transform-style: preserve-3d;
    animation: orbit-container var(--orbit-duration, 10s) linear infinite;
}

/* Individual orbital particles */
.orbital-particle {
    position: absolute;
    width: var(--orb-size, 5px);
    height: var(--orb-size, 5px);
    background: #ffcd6b;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 8px rgba(255, 205, 107, 0.6);
    animation: orbit-particle calc(var(--orbit-duration, 10s) * 0.8) linear infinite;
    animation-delay: var(--orbit-delay, 0s);
}

/* Orbital animations */
@keyframes orbit-container {
    0% { transform: rotateZ(0deg); }
    100% { transform: rotateZ(360deg); }
}

@keyframes orbit-particle {
    0% {
        transform: translate(calc(cos(0deg) * 40px), calc(sin(0deg) * 40px));
        opacity: 0.2;
    }
    25% {
        transform: translate(calc(cos(90deg) * 40px), calc(sin(90deg) * 40px));
        opacity: 0.8;
    }
    50% {
        transform: translate(calc(cos(180deg) * 40px), calc(sin(180deg) * 40px));
        opacity: 0.2;
    }
    75% {
        transform: translate(calc(cos(270deg) * 40px), calc(sin(270deg) * 40px));
        opacity: 0.8;
    }
    100% {
        transform: translate(calc(cos(360deg) * 40px), calc(sin(360deg) * 40px));
        opacity: 0.2;
    }
}

/* Gentle pulsing effect for particles */
@keyframes gentle-pulse {
    0% { opacity: 0.7; }
    50% { opacity: 1.0; }
    100% { opacity: 0.7; }
}

/* Sacred lake particle effects */
.sacred-particle {
    animation: gentle-pulse 3s infinite ease-in-out;
}

.loading-spinner {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3498db;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

.map-loading .loading-spinner {
    display: block;
}

/* Sacred lake specific styling */
.sacred-lake-marker {
    animation: pulse-glow var(--pulse-duration) infinite;
}

@keyframes pulse-glow {
    0% { box-shadow: 0 0 5px var(--lake-sacred); }
    50% { box-shadow: 0 0 20px var(--lake-sacred); }
    100% { box-shadow: 0 0 5px var(--lake-sacred); }
}

@media (max-width: 768px) {
    #map { height: 50vh; }
    #features { font-size: 0.9em; }
}

/* Performance metrics overlay */
.performance-overlay {
    position: absolute;
    bottom: 60px;
    right: 10px;
    background-color: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 5px 8px;
    border-radius: 4px;
    font-family: monospace;
    font-size: 11px;
    z-index: 20;
    pointer-events: none;
    display: none;
}

.performance-overlay.visible {
    display: block;
}

/* Grid visualization (for debugging) */
.grid-cell {
    position: absolute;
    border: 1px dashed rgba(255, 255, 255, 0.2);
    pointer-events: none;
    z-index: 6;
}

.grid-cell.active {
    background-color: rgba(0, 255, 0, 0.05);
}

.grid-cell.pooled {
    background-color: rgba(255, 0, 0, 0.05);
}

/* Fluid simulation debug visualization */
.fluid-cell {
    position: absolute;
    border: 1px dotted rgba(0, 100, 255, 0.2);
    pointer-events: none;
    z-index: 7;
}

.fluid-vector {
    position: absolute;
    width: 1px;
    background-color: rgba(0, 200, 255, 0.7);
    transform-origin: 0 0;
    z-index: 7;
    pointer-events: none;
}

/* Coin attribution styles */
.coin-info {
    position: absolute;
    bottom: 150px;
    right: 20px;
    width: 220px;
    background-color: rgba(255, 255, 255, 0.85);
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(5px);
    pointer-events: none;
    z-index: 100;
    transform-origin: bottom right;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.coin-info-content h3 {
    margin: 0 0 5px 0;
    font-size: 16px;
    color: #1a73e8;
}

.coin-info-content p {
    margin: 0 0 8px 0;
    font-size: 12px;
    color: #333;
}

.coin-info-description {
    font-style: italic;
    color: #666 !important;
}

/* Sacred lake orbital effect container */
.sacred-orbit-container {
    position: absolute;
    width: var(--orb-size);
    height: var(--orb-size);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transform-style: preserve-3d;
}

.sacred-lake-visualization {
  transform-style: preserve-3d;
  perspective: 1000px;
}

/* Generate orbital particles */
.orbital-particle {
    position: absolute;
    width: var(--particle-size);
    height: var(--particle-size);
    background-color: var(--lake-sacred);
    border-radius: 50%;
    opacity: 0;
    box-shadow: 0 0 4px var(--lake-sacred);
    will-change: transform, opacity;
}

/* Apply animation with unique delays and orbits */
.orbital-particle:nth-child(3n) {
    animation: orbit var(--orbit-duration) infinite ease-in-out;
    animation-delay: calc(var(--orbit-duration) * 0.1 * var(--delay-factor, 0));
    --rotate-z: calc(120deg * var(--index, 0));
    --rotate-y: calc(45deg * var(--index, 0));
}

.orbital-particle:nth-child(3n+1) {
    animation: orbit calc(var(--orbit-duration) * 1.2) infinite ease-in-out reverse;
    animation-delay: calc(var(--orbit-duration) * 0.15 * var(--delay-factor, 0));
    --rotate-z: calc(60deg * var(--index, 0));
    --rotate-y: calc(60deg * var(--index, 0));
}

.orbital-particle:nth-child(3n+2) {
    animation: orbit calc(var(--orbit-duration) * 0.8) infinite ease-in-out;
    animation-delay: calc(var(--orbit-duration) * 0.2 * var(--delay-factor, 0));
    --rotate-z: calc(45deg * var(--index, 0));
    --rotate-y: calc(30deg * var(--index, 0));
}

/* Define the orbital animation */
@keyframes orbit {
    20% {
        opacity: 1; /* fade in */
    }
    30% {
        transform: rotateZ(var(--rotate-z)) rotateY(var(--rotate-y)) 
                  translateX(var(--orb-size)) rotateZ(calc(-1 * var(--rotate-z)));
    }
    80% {
        transform: rotateZ(var(--rotate-z)) rotateY(var(--rotate-y)) 
                  translateX(var(--orb-size)) rotateZ(calc(-1 * var(--rotate-z)));
        opacity: 1;
    }
    100% {
        transform: rotateZ(var(--rotate-z)) rotateY(var(--rotate-y)) 
                  translateX(calc(var(--orb-size) * 3)) rotateZ(calc(-1 * var(--rotate-z)));
    }
}

/* Lake scanning effect */
.scanner {
    position: fixed;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        to bottom,
        transparent 90%,
        rgba(79, 193, 197, 0.1) 100%
    );
    animation: scan var(--scan-duration) infinite linear;
    pointer-events: none;
    z-index: 10;
}

@keyframes scan {
    from { transform: translateY(-100%); }
    to { transform: translateY(100%); }
}

/* Performance optimizations */
@layer base, effects, animations;

@layer effects {
    .glow-effect {
        filter: blur(0);
        will-change: transform;
        backface-visibility: hidden;
    }
}

.lake-type-indicator {
  position: absolute;
  top: 5px;
  left: 5px;
  /* ... */
}

.freshwater-indicator {
  border-left: 4px solid var(--freshwater-color);
}

.flow-indicator {
  position: absolute;
  width: 4px;
  height: 4px;
  /* ... */
}

.flow-trail {
  position: absolute;
  width: 2px;
  height: 2px;
  /* ... */
}
/* ... */